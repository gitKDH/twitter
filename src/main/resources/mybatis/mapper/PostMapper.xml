<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyun.twitter.post.mapper.PostMapper">
    <resultMap id="PostResultMap" type="com.hyun.twitter.post.entity.Post">
        <id column="post_id" property="postId"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="img_url" property="imgUrl"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    <select id="findByPostId" parameterType="long" resultMap="PostResultMap">
        SELECT * FROM Posts WHERE post_id = #{postId}
    </select>

    <insert id="addPostLike">
        INSERT INTO post_likes (post_id, user_id, created_at)
        VALUES (#{postId}, #{userId}, NOW())
    </insert>

    <update id="updatePost" parameterType="com.hyun.twitter.post.entity.Post">
        update Posts
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="imgUrl != null">imgUrl = #{imgUrl},</if>
        </set>
        where post_id = #{postId}
    </update>

    <delete id="deletePost" parameterType="Long">
        delete from Posts where post_id = #{postId}
    </delete>

    <select id="findAllPosts" resultMap="PostResultMap">
        SELECT * FROM Posts
        ORDER BY created_at DESC
    </select>

    <select id="findPostsByFollowing" parameterType="long" resultMap="PostResultMap">
        SELECT p.post_id, p.user_id, p.title, p.content, p.img_url, p.created_at, p.updated_at
        FROM posts p
                 JOIN follows f ON p.user_id = f.follower_id
        WHERE f.follower_id = #{userId}
        ORDER BY p.created_at DESC
    </select>
</mapper>